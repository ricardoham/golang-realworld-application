// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// Redis is an autogenerated mock type for the Redis type
type Redis struct {
	mock.Mock
}

// Delete provides a mock function with given fields: key
func (_m *Redis) Delete(key string) error {
	ret := _m.Called(key)

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(key)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Get provides a mock function with given fields: key, data
func (_m *Redis) Get(key string, data interface{}) error {
	ret := _m.Called(key, data)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, interface{}) error); ok {
		r0 = rf(key, data)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Ping provides a mock function with given fields:
func (_m *Redis) Ping() (string, error) {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Set provides a mock function with given fields: key, value, expiresOn
func (_m *Redis) Set(key string, value interface{}, expiresOn int) (bool, error) {
	ret := _m.Called(key, value, expiresOn)

	var r0 bool
	if rf, ok := ret.Get(0).(func(string, interface{}, int) bool); ok {
		r0 = rf(key, value, expiresOn)
	} else {
		r0 = ret.Get(0).(bool)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, interface{}, int) error); ok {
		r1 = rf(key, value, expiresOn)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
