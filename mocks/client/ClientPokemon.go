// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	presenter "github.com/ricardoham/pokedex-api/api/presenter"
	mock "github.com/stretchr/testify/mock"
)

// ClientPokemon is an autogenerated mock type for the ClientPokemon type
type ClientPokemon struct {
	mock.Mock
}

// GetAllResultPokemonFromPokeApi provides a mock function with given fields:
func (_m *ClientPokemon) GetAllResultPokemonFromPokeApi() (*presenter.Result, error) {
	ret := _m.Called()

	var r0 *presenter.Result
	if rf, ok := ret.Get(0).(func() *presenter.Result); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*presenter.Result)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetPokemonFromPokeApi provides a mock function with given fields: pokemon
func (_m *ClientPokemon) GetPokemonFromPokeApi(pokemon string) (*presenter.ClientPokemon, error) {
	ret := _m.Called(pokemon)

	var r0 *presenter.ClientPokemon
	if rf, ok := ret.Get(0).(func(string) *presenter.ClientPokemon); ok {
		r0 = rf(pokemon)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*presenter.ClientPokemon)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(pokemon)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
